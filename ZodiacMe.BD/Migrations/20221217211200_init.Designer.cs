// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZodiacMe.BD;

#nullable disable

namespace ZodiacMe.BD.Migrations
{
    [DbContext(typeof(BdContext))]
    [Migration("20221217211200_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ZodiacMe.BD.Modelos.Pareja", b =>
                {
                    b.Property<Guid>("ParejaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SignoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ParejaId");

                    b.HasIndex("SignoId");

                    b.ToTable("Parejas");
                });

            modelBuilder.Entity("ZodiacMe.BD.Modelos.Rol", b =>
                {
                    b.Property<byte>("RolId")
                        .HasColumnType("tinyint");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolId");

                    b.ToTable("Rols");

                    b.HasData(
                        new
                        {
                            RolId = (byte)1,
                            Nombre = "Administrador"
                        },
                        new
                        {
                            RolId = (byte)2,
                            Nombre = "Personal"
                        });
                });

            modelBuilder.Entity("ZodiacMe.BD.Modelos.Signo", b =>
                {
                    b.Property<Guid>("SignoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathImagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SignoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Signos");
                });

            modelBuilder.Entity("ZodiacMe.BD.Modelos.Usuario", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Password_hash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("Password_salt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte>("RolId")
                        .HasColumnType("tinyint");

                    b.HasKey("UsuarioId");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ZodiacMe.BD.Modelos.Pareja", b =>
                {
                    b.HasOne("ZodiacMe.BD.Modelos.Signo", "Signo")
                        .WithMany("Parejas")
                        .HasForeignKey("SignoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Signo");
                });

            modelBuilder.Entity("ZodiacMe.BD.Modelos.Signo", b =>
                {
                    b.HasOne("ZodiacMe.BD.Modelos.Usuario", "Usuario")
                        .WithMany("Signos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ZodiacMe.BD.Modelos.Usuario", b =>
                {
                    b.HasOne("ZodiacMe.BD.Modelos.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("ZodiacMe.BD.Modelos.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ZodiacMe.BD.Modelos.Signo", b =>
                {
                    b.Navigation("Parejas");
                });

            modelBuilder.Entity("ZodiacMe.BD.Modelos.Usuario", b =>
                {
                    b.Navigation("Signos");
                });
#pragma warning restore 612, 618
        }
    }
}
